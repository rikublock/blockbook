name: build-all

on:
  push:
    branches:
      - master
      - dev
      - test
    tags:
      - "v**"
  pull_request:
    branches:
      - master
      - dev
  workflow_dispatch:

permissions:
  contents: write

jobs:
  prepare_image:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        if: github.event.pull_request.draft == false

      - uses: docker/setup-buildx-action@v3

      - run: docker pull hello-world

      # - name: Build base image
      #   run: |
      #     make BASE_IMAGE=ubuntu:20.04 PORTABLE=1 build-images

      - uses: docker/build-push-action@v5
        with:
          tags: hello-world:latest
          outputs: type=docker,dest=/tmp/hello-world.tar

      - uses: actions/upload-artifact@v3
        with:
          name: hello-world
          path: /tmp/hello-world.tar

  build_mainnet:
    runs-on: ubuntu-22.04
    needs: prepare_image
    steps:
      - uses: actions/checkout@v4
        if: github.event.pull_request.draft == false

      - name: Download docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: blockbook-build
          path: /tmp

      - name: Import image
        run: |
          docker load --input /tmp/blockbook-build.tar
          docker image ls -a

      - name: Build both Blockbook and back-end packages
        run: |
          make BASE_IMAGE=ubuntu:20.04 PORTABLE=1 deb-blocknet

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts-mainnet
          path: |
            build/backend-blocknet_*_amd64.deb 
            build/blockbook-blocknet_*_amd64.deb

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          name: Blockbook ${{ github.ref_name }}
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
          generate_release_notes: true
          files: |
            build/backend-blocknet_*_amd64.deb 
            build/blockbook-blocknet_*_amd64.deb

  build_testnet:
    runs-on: ubuntu-22.04
    needs: prepare_image
    steps:
      - uses: actions/checkout@v4
        if: github.event.pull_request.draft == false

      - name: Download docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: blockbook-build
          path: /tmp

      - name: Import image
        run: |
          docker load --input /tmp/blockbook-build.tar
          docker image ls -a

      - name: Build both Blockbook and back-end packages
        run: |
          make BASE_IMAGE=ubuntu:20.04 PORTABLE=1 deb-blocknet_testnet

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts-mainnet
          path: |
            build/backend-blocknet-testnet_*_amd64.deb 
            build/blockbook-blocknet-testnet_*_amd64.deb

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          name: Blockbook ${{ github.ref_name }}
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
          generate_release_notes: true
          files: |
            build/backend-blocknet-testnet_*_amd64.deb 
            build/blockbook-blocknet-testnet_*_amd64.deb
